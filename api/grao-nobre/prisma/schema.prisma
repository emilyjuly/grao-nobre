// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int    @id @default(autoincrement())
  name              String
  email             String @unique
  password          String
  cell_phone_number String

  addresses Address[]
  Order     Order[]
}

model Address {
  id           Int     @id @default(autoincrement())
  street       String
  number       Int
  complement   String?
  neighborhood String
  city         String
  state        String
  zip_code     String
  user         User    @relation(fields: [userId], references: [id])
  userId       Int

  orders Order[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Decimal @db.Decimal(10, 2)
  imageUrl    String?
  category    String
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  items OrderItem[]
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  total     Decimal  @db.Decimal(10, 2)
  status    String   @default("Pendente")

  user   User @relation(fields: [userId], references: [id])
  userId Int

  address   Address @relation(fields: [addressId], references: [id])
  addressId Int

  items   OrderItem[]
  payment Payment?
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  quantity   Int
  price Decimal @db.Decimal(10, 2)

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Payment {
  id     Int    @id @default(autoincrement())
  type   String
  status String @default("Pendente")

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int @unique
}
